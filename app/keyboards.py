from aiogram.types import (ReplyKeyboardMarkup, KeyboardButton,
                           InlineKeyboardMarkup, InlineKeyboardButton)
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder


async def inline_ls(ls):
    keyboard = InlineKeyboardBuilder()
    if ls:
        for l in ls:
            keyboard.add(InlineKeyboardButton(text=f'üè† {str(l.ls)}-{str(l.kv)}', callback_data=f'show_ls:{str(l.ls)}'))
    keyboard.add(InlineKeyboardButton(text=f'üîç –î–æ–±–∞–≤–∏—Ç—å –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç', callback_data='add_ls'))
    return keyboard.adjust(1).as_markup()


async def inline_show_ipu(ls: int, ipu):
    keyword = InlineKeyboardBuilder()
    type_mapping = {
        'hv': '–•–í–°',
        'gv': '–ì–í–°',
        'e': '–≠–õ-–í–û'
    }
    if ipu:
        for i in ipu:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –∫–æ—Ä—Ç–µ–∂–∞ –ø–æ —Ç–∏–ø—É
            display_type = type_mapping.get(i.type, i.type)  # –ï—Å–ª–∏ —Ç–∏–ø –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π
            number_display = i.number if i.number is not None else ' '  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞, –µ—Å–ª–∏ None
            location_display = i.location if i.location is not None else ' '  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞, –µ—Å–ª–∏ None

            keyword.row(InlineKeyboardButton(text=f"{display_type}, {number_display} {location_display}",
                                             callback_data=f'add_pokazaniya:{i.ls}:{i.type}'))

    keyword.row(InlineKeyboardButton(text=f'‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –Ω–∞—á–∞–ª–æ', callback_data='all_ls_call'),
                InlineKeyboardButton(text=f'‚ùå –û—Ç–≤—è–∑–∞—Ç—å —Å—á–µ—Ç', callback_data=f'del_ls:{ls}'))
    return keyword.as_markup()


async def inline_del_ls(ls: int):
    keyword = InlineKeyboardBuilder()
    keyword.row(InlineKeyboardButton(text=f'–î–∞', callback_data=f'del_ls_yes:{ls}'),
                InlineKeyboardButton(text=f'–ù–µ—Ç', callback_data=f'all_ls_call'))
    return keyword.as_markup()


async def inline_back(ls: int):
    keyword = InlineKeyboardBuilder()
    keyword.row(InlineKeyboardButton(text=f'‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É —Å—á–µ—Ç—á–∏–∫–æ–≤', callback_data=f'show_ls:{ls}'))
    return keyword.as_markup()
